/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.resources.crm.selectivesync.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.merge.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = SelectiveSyncMetaListRequest.Builder.class)
public final class SelectiveSyncMetaListRequest {
    private final Optional<String> commonModel;

    private final Optional<String> cursor;

    private final Optional<Integer> pageSize;

    private final Map<String, Object> additionalProperties;

    private SelectiveSyncMetaListRequest(
            Optional<String> commonModel,
            Optional<String> cursor,
            Optional<Integer> pageSize,
            Map<String, Object> additionalProperties) {
        this.commonModel = commonModel;
        this.cursor = cursor;
        this.pageSize = pageSize;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("common_model")
    public Optional<String> getCommonModel() {
        return commonModel;
    }

    /**
     * @return The pagination cursor value.
     */
    @JsonProperty("cursor")
    public Optional<String> getCursor() {
        return cursor;
    }

    /**
     * @return Number of results to return per page.
     */
    @JsonProperty("page_size")
    public Optional<Integer> getPageSize() {
        return pageSize;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SelectiveSyncMetaListRequest && equalTo((SelectiveSyncMetaListRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SelectiveSyncMetaListRequest other) {
        return commonModel.equals(other.commonModel) && cursor.equals(other.cursor) && pageSize.equals(other.pageSize);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.commonModel, this.cursor, this.pageSize);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> commonModel = Optional.empty();

        private Optional<String> cursor = Optional.empty();

        private Optional<Integer> pageSize = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(SelectiveSyncMetaListRequest other) {
            commonModel(other.getCommonModel());
            cursor(other.getCursor());
            pageSize(other.getPageSize());
            return this;
        }

        @JsonSetter(value = "common_model", nulls = Nulls.SKIP)
        public Builder commonModel(Optional<String> commonModel) {
            this.commonModel = commonModel;
            return this;
        }

        public Builder commonModel(String commonModel) {
            this.commonModel = Optional.of(commonModel);
            return this;
        }

        @JsonSetter(value = "cursor", nulls = Nulls.SKIP)
        public Builder cursor(Optional<String> cursor) {
            this.cursor = cursor;
            return this;
        }

        public Builder cursor(String cursor) {
            this.cursor = Optional.of(cursor);
            return this;
        }

        @JsonSetter(value = "page_size", nulls = Nulls.SKIP)
        public Builder pageSize(Optional<Integer> pageSize) {
            this.pageSize = pageSize;
            return this;
        }

        public Builder pageSize(Integer pageSize) {
            this.pageSize = Optional.of(pageSize);
            return this;
        }

        public SelectiveSyncMetaListRequest build() {
            return new SelectiveSyncMetaListRequest(commonModel, cursor, pageSize, additionalProperties);
        }
    }
}
